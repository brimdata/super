script: |
  source service.sh
  echo =1= >&2
  ! super db query -z "$(cat bad-single-line.pipe)"
  echo =2= >&2
  ! super db query -z "$(cat bad-multiple-lines.pipe)"
  echo =3= >&2
  ! super db query -z -I good.pipe "$(cat bad-single-line.pipe)"
  echo =4= >&2
  ! super db query -z -I good.pipe "$(cat bad-multiple-lines.pipe)"
  echo =5= >&2
  ! super db query -z -I bad-single-line.pipe
  echo =6= >&2
  ! super db query -z -I bad-multiple-lines.pipe
  echo =7= >&2
  ! super db query -z -I good.pipe -I bad-single-line.pipe
  echo =8= >&2
  ! super db query -z -I good.pipe -I bad-multiple-lines.pipe

inputs:
  - name: bad-single-line.pipe
    data: |
      from test \ count()
  - name: bad-multiple-lines.pipe
    data: |
      from
      test \ count()
  - name: good.pipe
    data: |
      type mystring=string
  - name: service.sh

outputs:
  - name: stderr
    data: |
      =1=
      error parsing SuperPipe at line 1, column 11:
      from test \ count()
            === ^ ===
      =2=
      error parsing SuperPipe at line 2, column 6:
      test \ count()
       === ^ ===
      =3=
      error parsing SuperPipe at line 1, column 11:
      from test \ count()
            === ^ ===
      =4=
      error parsing SuperPipe at line 2, column 6:
      test \ count()
       === ^ ===
      =5=
      error parsing SuperPipe in bad-single-line.pipe at line 1, column 11:
      from test \ count()
            === ^ ===
      =6=
      error parsing SuperPipe in bad-multiple-lines.pipe at line 2, column 6:
      test \ count()
       === ^ ===
      =7=
      error parsing SuperPipe in bad-single-line.pipe at line 1, column 11:
      from test \ count()
            === ^ ===
      =8=
      error parsing SuperPipe in bad-multiple-lines.pipe at line 2, column 6:
      test \ count()
       === ^ ===
