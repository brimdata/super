zed: "*"

# These test inputs are from src/util.cc in the Zeek source code as of Jan 2022.
# See https://github.com/zeek/zeek/blob/3d9d6e953be5ae8b72336031b6e6659222f52cea/src/util.cc#L2521

# Note that our code differs from Zeek on "Private Use Area (E000-F8FF) are always invalid"...
# e.g., \xee\x8b\xa0.  In Zed (and JSON), these are valid.


input: |
  #separator \x09
  #set_separator	,
  #empty_field	(empty)
  #unset_field	-
  #fields	s
  #types	string
  string
  string\n
  string\x82
  \x07\xd4\xb7o
  a
  \b\f\n\r\t\x00\x15
  \xc3\xb1
  \xc3\x28
  \xc0\x81
  \xc1\x81
  \xc2\xcf
  \xa0\xa1
  \xe2\x82\xa1
  \xe0\xa3\xa1
  \xe0\x80\xa1
  \xe2\x28\xa1
  \xed\xa0\xa1
  \xe2\x82\x28
  \xf0\x90\x8c\xbc
  \xf1\x80\x8c\xbc
  \xf4\x80\x8c\xbc
  \xf0\x80\x8c\xbc
  \xf2\x28\x8c\xbc
  \xf4\x90\x8c\xbc
  \xf0\x90\x28\xbc
  \xf0\x28\x8c\x28
  \xf4\x80\x8c
  \xf0
  \xee\x8b\xa0
  \xc3\xb1\xc0\x81

#XXX add more from util.cc

output: |
  {s:"string"}
  {s:"string\n"}
  {s:"string\\x82"}
  {s:"\u0007‘∑o"}
  {s:"a"}
  {s:"\b\f\n\r\t\u0000\u0015"}
  {s:"√±"}
  {s:"\\xc3("}
  {s:"\\xc0\\x81"}
  {s:"\\xc1\\x81"}
  {s:"\\xc2\\xcf"}
  {s:"\\xa0\\xa1"}
  {s:"‚Ç°"}
  {s:"‡£°"}
  {s:"\\xe0\\x80\\xa1"}
  {s:"\\xe2(\\xa1"}
  {s:"\\xed\\xa0\\xa1"}
  {s:"\\xe2\\x82("}
  {s:"êåº"}
  {s:"ÒÄåº"}
  {s:"ÙÄåº"}
  {s:"\\xf0\\x80\\x8c\\xbc"}
  {s:"\\xf2(\\x8c\\xbc"}
  {s:"\\xf4\\x90\\x8c\\xbc"}
  {s:"\\xf0\\x90(\\xbc"}
  {s:"\\xf0(\\x8c("}
  {s:"\\xf4\\x80\\x8c"}
  {s:"\\xf0"}
  {s:"Óã†"}
  {s:"√±\\xc0\\x81"}
