zed: '*'

input-flags: -i json

input: |
  []
  [null]
  ["a", null]
  ["b", 2]
  ["c", 100, 200]
  ["d", null, 200]
  ["e", [1, 2]]
  ["f", false, ["foo", 2], {"dd": ["foo", 2, true]}]
  ["g", false, ["foo", 2], {"d.d": ["foo", 2, true]}]

output-flags: -pretty=4

output: |
  []
  [
      null
  ]
  [
      "a",
      null (string)
  ]
  [
      "b" ((int64,string)),
      2 ((int64,string))
  ]
  [
      "c" ((int64,string)),
      100 ((int64,string)),
      200 ((int64,string))
  ]
  [
      "d" ((int64,string)),
      null ((int64,string)),
      200 ((int64,string))
  ]
  [
      "e" ((string,[int64])),
      [
          1,
          2
      ] ((string,[int64]))
  ]
  [
      "f" ((bool,string,{dd:[(int64,bool,string)]},[(int64,string)])),
      false ((bool,string,{dd:[(int64,bool,string)]},[(int64,string)])),
      [
          "foo" ((int64,string)),
          2 ((int64,string))
      ] ((bool,string,{dd:[(int64,bool,string)]},[(int64,string)])),
      {
          dd: [
              "foo" ((int64,bool,string)),
              2 ((int64,bool,string)),
              true ((int64,bool,string))
          ]
      } ((bool,string,{dd:[(int64,bool,string)]},[(int64,string)]))
  ]
  [
      "g" ((bool,string,{"d.d":[(int64,bool,string)]},[(int64,string)])),
      false ((bool,string,{"d.d":[(int64,bool,string)]},[(int64,string)])),
      [
          "foo" ((int64,string)),
          2 ((int64,string))
      ] ((bool,string,{"d.d":[(int64,bool,string)]},[(int64,string)])),
      {
          "d.d": [
              "foo" ((int64,bool,string)),
              2 ((int64,bool,string)),
              true ((int64,bool,string))
          ]
      } ((bool,string,{"d.d":[(int64,bool,string)]},[(int64,string)]))
  ]
