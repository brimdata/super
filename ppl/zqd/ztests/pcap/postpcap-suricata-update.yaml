script: |

  # Run suricataupdater once to clear rules.
  suricataupdater --url http://notexist &> /dev/null

  tar xzf emerging.rules.tar.gz

  # Create a suricataupdater wrapper that will invoke the
  # brim-packaged suricataupdater, pointing it to the local rules
  # untarred above.
  echo "#!/usr/bin/env bash" > ./suricataupdater
  echo "suricataupdater --local rules --url http://notexist" >> ./suricataupdater
  chmod a+x ./suricataupdater

  ZQD_EXTRA_FLAGS='-loglevel=info -suricataupdater=./suricataupdater' source services.sh

  # Wait for a zqd log line indicating that the suricata-update
  # background process has completed.
  i=0
  while ! grep -q "Suricata updater completed" zqd.log
  do
    let i+=1
    if [ $i -gt 30 ]; then
      echo "timed out waiting for suricata updated log message to appear"
      cat zqd.log
      exit 1
    fi
    sleep 1
  done

  zapi -h $ZQD_HOST -s testsp postpcap -f alerts.pcap >/dev/null
  zapi -h $ZQD_HOST -s testsp get -z "event_type = alert | count()"

inputs:
  - name: alerts.pcap
    source: alerts.pcap
  - name: services.sh
    source: ../services.sh
  - name: emerging.rules.tar.gz
    source: emerging.rules.tar.gz

outputs:
  - name: stdout
    data: |
      {count:15 (uint64)} (=0)
