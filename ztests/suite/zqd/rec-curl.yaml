script: |
  source recserv.sh
  echo ===
  curl --header "Content-Type: application/json" -request POST \
    --data '{"addr":"a.b.c:5000","node":"a.b"}' \
    http://$ZQD_HOST/register 2> err
  echo ===
  curl --header "Content-Type: application/json" -request POST \
    --data '{"N":1}' \
    http://$ZQD_HOST/recruit 2> err
  echo ===
  #
  # For this second register, the worker will be in the reserved pool,
  # so it will not be reregistered. This still returns a status of OK.
  #
  curl --header "Content-Type: application/json" -request POST \
    --data '{"addr":"a.b.c:5000","node":"a.b"}' \
    http://$ZQD_HOST/register 2> err
  echo ===
  #
  # Now when recruit is called again, the reserved worker will not be recruited
  #
  curl --header "Content-Type: application/json" -request POST \
    --data '{"N":1}' \
    http://$ZQD_HOST/recruit 2> err
  echo ===
  #
  # Now unreserve the worker so it can be reregistered
  #
  curl --header "Content-Type: application/json" -request POST \
    --data '{"addr":"a.b.c:5000"}' \
    http://$ZQD_HOST/unreserve 2> err
  echo ===
  curl --header "Content-Type: application/json" -request POST \
    --data '{"addr":"a.b.c:5000","node":"a.b"}' \
    http://$ZQD_HOST/register 2> err
  echo ===
  curl --header "Content-Type: application/json" -request POST \
    --data '{"N":1}' \
    http://$ZQD_HOST/recruit 2> err

    
inputs:
  - name: recserv.sh
    source: recserv.sh

outputs:
  - name: stdout
    data: |
      ===
      {"status":"ok"}
      ===
      {"workers":[{"addr":"a.b.c:5000","node":"a.b"}]}
      ===
      {"status":"ok"}
      ===
      {"workers":[]}
      ===
      {"status":"ok"}
      ===
      {"status":"ok"}
      ===
      {"workers":[{"addr":"a.b.c:5000","node":"a.b"}]}
