zed: |
  type conn = {_path:string, id:{src:ip,dst:ip}, etc:string}
  type dns = {_path:string, id:{src:ip,dst:ip}, query:string, query_size:uint64}
  const schemas = |{
    "conn": conn,
    "dns": dns
  }|
  split (
    => !missing(schemas[_path]) | cut schema:=schemas[_path]
    => missing(schemas[_path]) | put _UNCLASSIFIED:=true
  ) | sort .

input: |
  {_path:"conn",id:{src:"192.168.1.1",dst:"192.168.1.2"},etc:"foo"}
  {_path:"dns",id:{src:"192.168.1.1",dst:"192.168.1.2"},query:"www.google.com",query_size:23}
  {_path:"conn",id:{src:"192.168.1.1",dst:"192.168.1.3"},etc:"foo"}
  {_path:"unknown",x:"has unknown _path"}
  {y:"has no _path"}

output: |
  {_path:"unknown",x:"has unknown _path",_UNCLASSIFIED:true}
  {schema:<conn=<{_path:string,id:{src:ip,dst:ip},etc:string}>>}
  {schema:<conn=<{_path:string,id:{src:ip,dst:ip},etc:string}>>}
  {schema:<dns=<{_path:string,id:{src:ip,dst:ip},query:string,query_size:uint64}>>}
  {y:"has no _path",_UNCLASSIFIED:true}
