script: |
  super compile -C -O 'values {a:1} | values a, {b:a}, c'
  echo ===
  super compile -C -O 'values {a,b} | aggregate count(a) by b, c'
  echo ===
  super compile -C -O 'values {...a} | values {...b.c} | values d, {e}'
  echo ===
  super compile -C -O 'values {a:{b:1}} | values {a:{...a,c:2}} | values {a:{...a,d:3}}'
  echo ===
  super compile -C -O '{...a,...b} | values {c}'
  echo ===
  super compile -C -O '{a,...b} | values {a}'
  echo ===
  super compile -C -O 'select a, max(b) as c group by a | aggregate min(c) by a'
  echo ===
  super compile -C -O 'values {b:{d:1},c:{d:2}} | values {d:3,...b,...c}'

outputs:
  - name: stdout
    data: |
      null
      | values 1, {b:1}, error("missing")
      | output main
      ===
      null
      | aggregate
          count:=count(a) by b:=b,c:=error("missing")
      | output main
      ===
      null
      | values a.b.c.d, {e:a.b.c.e}
      | output main
      ===
      null
      | values {a:{b:1,c:2,d:3}}
      | output main
      ===
      null
      | values {...a,...b}
      | values {c:c}
      | output main
      ===
      null
      | values {a:a,...b}
      | values {a:a}
      | output main
      ===
      null
      | aggregate
          t0:=max(b) by k0:=a
      | aggregate
          min:=min(t0) by a:=k0
      | output main
      ===
      null
      | values {d:2}
      | output main
