script: |
  ! super dev compile -lake='' -C -s 'from p'
  echo === >&2
  export ZED_LAKE=test
  super db init
  ! super dev compile -C -s 'from test'
  echo === >&2
  ! super dev compile -C -s 'from test*'
  echo === >&2
  ! super dev compile -C -s 'from /test/'
  echo === >&2
  super db create -q test
  ! super dev compile -C -s 'from (pool * => count())'

outputs:
  - name: stderr
    data: |
      "from pool" cannot be used without a lake at line 1, column 1:
      from p
      ~~~~~~
      ===
      test: pool not found at line 1, column 6:
      from test
           ~~~~
      ===
      test*: pool matching glob not found at line 1, column 6:
      from test*
           ~~~~~
      ===
      test: pool matching regexp not found at line 1, column 6:
      from /test/
           ~~~~~~
      ===
      => not allowed after pool pattern in 'from' operator at line 1, column 7:
      from (pool * => count())
            ~~~~~~
