# This test exercises the partials paths in the reducers by doing an aggregate
# with a single-row limit.  We also make sure the partials consumer can handle
# an empty input by including a record for key "a" with no value field.
script: |
  super -s -c "union(x) by key with -limit 1" in.sup > union.sup
  super -s -c "collect(x) by key with -limit 1" in.sup > collect.sup

inputs:
  - name: in.sup
    data: |
      {key:"a",x:1::int32}
      {key:"a",x:-1::int32}
      {key:"b",x:2::int32}
      {key:"b",x:1::int32}
      {key:"a",x:8::int32}
      {key:"b",x:1::int32}
      {key:"a"}
      {key:"a"}
      {key:"a"}

outputs:
  - name: union.sup
    data: |
      {key:"a",union:|[1::int32,-1::int32,8::int32]|}
      {key:"b",union:|[1::int32,2::int32]|}
  - name: collect.sup
    data: |
      {key:"a",collect:[1::int32,-1::int32,8::int32]}
      {key:"b",collect:[2::int32,1::int32,1::int32]}
