script: |
  export SUPER_DB=test
  super db init -q
  super db create -q -orderby a:asc poolA
  super db create -q -orderby b:desc poolB
  super db load -q -use poolA a.sup
  super db load -q -use poolB b.sup
  super db -S -c 'from :pools | drop id | sort name | drop ts'
  echo ===
  super db -S -c 'from poolA@main:objects | {nameof:nameof(this),...this} | drop id'
  super db -S -c 'from poolA:log | cut nameof(this) | drop ts'

inputs:
  - name: a.sup
    data: |
      {a:1}
      {a:2}
  - name: b.sup
    data: |
      {b:3}
      {b:2}
      {b:1}

outputs:
  - name: stdout
    data: |
      {
          name: "poolA",
          layout: {
              order: "asc"::=order.Which,
              keys: [
                  [
                      "a"
                  ]::=field.Path
              ]::=field.List
          }::=order.SortKey,
          seek_stride: 65536,
          threshold: 524288000
      }
      {
          name: "poolB",
          layout: {
              order: "desc"::=order.Which,
              keys: [
                  [
                      "b"
                  ]::=field.Path
              ]::=field.List
          }::=order.SortKey,
          seek_stride: 65536,
          threshold: 524288000
      }
      ===
      {
          nameof: "data.Object",
          min: 1,
          max: 2,
          count: 2::uint64,
          size: 18
      }
      {
          nameof: "lake.BranchTip"
      }
      {
          nameof: "Commit"
      }
